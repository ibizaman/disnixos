Version 0.9
===========
- The test infrastructure now also simulates a Disnix profile symlink for more accurate results

- The test infrastructure now uses the Python implementation of NixOS' test driver

- Introduced the --extra-params option to propagate additional parameters to the input models

- disnixos-env also accepts the --undeploy paramater to completely undeploy an entire system

Version 0.8
===========
- disnixos-manifest generates deployment models for infrastructure deployment

- disnixos-manifest, disnixos-instantiate, disnixos-delegate, disnixos-env, disnixos-vm-env can also work with packages models

- New tools: disnixos-convert-manifest, disnixos-convert

Version 0.7
===========
- Add --shell support to the NixOps client

- Added testsuite for the disnix-nixops-client tool

Version 0.6
===========
- Added disnixos-delegate, disnixos-capture-manifest, disnixos-reconstruct

Version 0.5
===========
- Compatibility fixes with current versions of Disnix and NixOps

Version 0.4
===========
- Add disnixos-snapshot-network and disnixos-restore-network to capture and restore state of entire NixOS configurations

- Modify infrastructure to work with Disnix' new container formalism

Version 0.3
===========
- The distributed derivation and manifest generator now pass the XML input as files to support bigger ones (Nix 1.9 or newer required)

- Implement snapshot and restore operations

- Fix disnixos-manifest to correctly generate manifests that work with NixOps

Version 0.2
===========
- Machines in the network model can refer to each other through the 'node' parameter

- Multiple network models are also supported, allowing someone to capture concerns separately

- Added some more infrastructure level equivalents of certain core Disnix utilities:
  disnixos-{manifest,instantiate,collect-garbage,query}

- NixOps can be used for infrastructure deployment instead of the core Disnix toolset

- Various bug fixes

- Implemented a test suite for the most common use cases
